#app.port\u548cserver.port\u533a\u522b??
spring.application.name=demo
server.port=8815
#debug=true

#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500


spring.datasource.max-active=100
spring.datasource.max-idle=8
spring.datasource.max-wait=120000
spring.datasource.min-evictable-idle-time-millis=30000
spring.datasource.min-idle=8
spring.datasource.name=testdb # Name of the datasource.
spring.datasource.platform=all
#spring.datasource.schema=
#spring.datasource.separator=;
#spring.datasource.sql-script-encoding=
spring.datasource.test-on-borrow=true
spring.datasource.test-on-return=false
#spring.datasource.test-while-idle=
spring.datasource.time-between-eviction-runs-millis= 1
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://10.110.200.86:1433;DatabaseName=test
spring.datasource.username=sa
spring.datasource.password=Fiber@19
spring.datasource.validation-query=select 1 from dual

########################################################
### REDIS (RedisProperties)
########################################################
# Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.max-redirects=
# Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.cluster.nodes=
# Database index used by the connection factory.
spring.redis.database=10
# Redis server host.
spring.redis.host=10.110.200.17
# Login password of the redis server.
spring.redis.password=6385pwd123
# Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-active=8
# Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-idle=8
# Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.max-wait=-1
# Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.pool.min-idle=0
# Redis server port.
spring.redis.port=6385
# Name of Redis server.
#spring.redis.sentinel.master=
# Comma-separated list of host:port pairs.
#spring.redis.sentinel.nodes=
# Connection timeout in milliseconds.
#spring.redis.timeout=0

spring.profiles.active = test
com.zzyyaa.test.author = \u8D75\u6C38\u5B89
com.zzyyaa.test.age=25
com.zzyyaa.test.group = ${com.zzyyaa.test.author} \u5E05\u6C14 \uFF0C\u4ECA\u5E74 ${com.zzyyaa.test.age}
upload.file = E:\\file
